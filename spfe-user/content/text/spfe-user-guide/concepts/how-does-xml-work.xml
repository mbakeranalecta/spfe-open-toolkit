<?xml version="1.0" encoding="UTF-8"?>

<generic-topic xmlns="http://spfeopentoolkit.org/ns/spfe-docs"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://spfeopentoolkit.org/ns/spfe-docs 
    http://spfeopentoolkit.org/spfe-docs/topic-types/generic-topic/schemas/generic-topic.xsd">

    <head>
        <id>how-does-xml-work</id>
        <history>
            <revision>
                <date>2014-10-26</date>
                <author>jfmacdonald</author>
                <comment>New topic</comment>
                <status>In progress</status>
            </revision>
            <revision>
                <date>2014-11-02</date>
                <author>jfmacdonald</author>
                <comment>Add index entries</comment>
                <status>In progress</status>
            </revision>
            <revision>
                <date>2014-11-30</date>
                <author>jfmacdonald</author>
                <comment>New topic</comment>
                <status>Ready for technical review</status>
            </revision>
        </history>
        <index>
            <entry>
                <type>feature</type>
                <term>XML</term>
            </entry>
            <entry>
                <type>feature</type>
                <term>element</term>
            </entry>
            <entry>
                <type>feature</type>
                <term>tag</term>
            </entry>
            <entry>
                <type>feature</type>
                <term>markup</term>
            </entry>
            <entry>
                <type>xml-element-name</type>
                <term>head</term>
            </entry>
            <entry>
                <type>feature</type>
                <term>header</term>
            </entry>
            <entry>
                <type>xml-element-name</type>
                <term>body</term>
            </entry>
        </index>
    </head>
    <body>
        <title>How does XML work?</title>

        <p> The Extensible Markup Language (<feature>XML</feature>) is, as stated by
            its standardizing body, the <link-external
                href="http://www.w3.org/standards/xml/">World Wide Web
                Consortium (W3C)</link-external>, &quot;a simple text-based
            format for representing structured information.&quot; Because it is
            an open standard based on a rich history of markup formats and the
            work of many people, XML is widely used and is supported by a strong
            set of XML technlogies. The SPFE Open Toolkit is based on XML and
            its supporting technologies.</p>

        <section>
            <title>What is XML?</title>

            <p> The essence of the format is that textual information is placed within tagged
                containers called <feature>elements</feature>. An essay, written using <feature>
                    EPPO simple </feature> XML markup, begins with a snippet of XML like that below.
            </p>

            <codeblock><![CDATA[
        <title>Of Discourse</title>
        <byline>
            <author-name>Francis Bacon</author-name>
        </byline>]]></codeblock>

            <subhead>Elements</subhead>

            <p> An element is a content container. An element begins with a tag, an identifying name
                enclosed in angle brackets, and ends with a matching tag, which preceds the
                identifier with a slash. We speak loosely when referring to both opening and closing
                tags and everything inbetween as an element, but strictly speaking, the element is
                just the container. We do take care not to call a tag an element or an element a
                tag.  Think of a tag as a lid.</p>

            <p> In the snippet of XML above, <code>&lt;title&gt;</code> is an opening tag and
                <code>&lt;/title&gt;</code> is its closing tag. (We need a lid on both ends.) The
                byline element holds an author-name element, which holds an author's name in simple
                text.</p>

            <p> Why the author-name element? It seems redundant; we could have placed the author's
                name directly in the byline element. But that would have presented a problem if
                there were more than one author. A simple comma may suffice for you and me to divide
                the text into a list of multiple authors, but we don't want to leave that task to a
                computer program. By placing each author's name in a separate element, we have
                created unambiguous markup.</p>

            <p> A tag associates <feature>metadata</feature> with its element's contents. A computer
                program with instructions for the tag can then process the element and its contents
                properly. In XML, metadata is not only information about contents but is also
                information that instructs a program what to do. A tag is not just a lid, it's a lid
                with an instructive label.</p>

            <subhead>The XML document element</subhead>

            <p> With elements containing other elements, among them there must be some that don't
                contain others and some that are not contained. We call the elements within a
                containing element the element's <quote>children</quote> and call it the parent.
                Thus, among them all, some are both children and parent, some are children only, and
                others are parents only.</p>

            <p> But a valid XML document can only have one parent that is not also a child. All
                elements in an XML file must derive from a single root element. We call the root
                element the <italic>document element</italic>. </p>

            <subhead>Attributes</subhead>

            <p> Sometimes a tag needs some additional information to work
                properly. For example, the HTML <code>&lt;a&gt;</code> tag
                represents a hyperlink but needs extra information to provide a
                link address. That information can be given by adding an
                <feature>attribute</feature>. In the following, the <code>href</code>
                attribute is added to the <code>&lt;a&gt;</code> tag. </p>

            <codeblock><![CDATA[
    <a href="http://spfeopentoolkit.org/">The SPFE Open Toolkit</a>]]>
            </codeblock>

            <subhead>Other XML components</subhead>

            <p> Whereas elements do the primary work of an XML document, specialists
                need to be called in for some tasks. Along with elements, you'll
                often find the following other components in an XML document:</p>

            <ul>

                <li> <p> <bold>Comments</bold> are for the benefit of human readers. A comment is
                        bracketed in the form <code>&lt;!-- a comment --&gt;</code>. </p> </li>

                <li> <p> <bold>Processing instructions</bold> provide a computer program with
                        instructions that don't pertain to any particular element. A processing
                        instruction has the form <code>&lt;?keyword attributes ?&gt;</code>. You
                        will typically see a processing instruction at the top of an XML file, which
                        alerts a program that it is an XML file: <code> &lt;?xml version="1.0"
                            encoding="UTF-8"?&gt; </code>. </p> </li>               

            </ul>

            <subhead>Where can I learn more?</subhead>

            <p>The W3C website provides a wealth of resources for learning more
                about XML and XML technologies. Liam R. E. Quin's article <link-external
                href="http://www.w3.org/standards/xml/core">XML Essentials</link-external>
                is a good place to start.</p>

        </section>

        <section>
            <title>What is a valid XML document?</title>

            <p> Though tagged elements imply meaning, a computer program can't interpret them
                properly unless it's coded to do so. Further, a program generally can't process an
                element correctly unless it comes upon the element in the proper context. For
                example, how should a program interpret the element &lt;title&gt;A
                Title&lt;/title&gt; placed in the midst of a paragraph, even though it were coded to
                recognize a title element?</p>

            <p> To avoid such ambiguity, an XML document needs to follow certain rules to be valid.
                These rules, called <quote>schemas,</quote> define which elements can go where and
                what they can contain.  Thus a valid XML document has a defined
                <feature>structure</feature>.  The SPFE Open Toolkit uses the <feature>XML
                    Schema</feature> standardized by W3C. To be processed, every XML file the
                toolkit uses must be valid.</p>

        </section>

        <section>
            <title>Who uses XML?</title>

            <p> Many methods can and are used to add metadata to content, but those that use XML to
                markup documents are the most widespread and robust. These include the following:
            </p>

            <ul>                

                <li> <p> The <link-external href="http://dita.xml.org/standard">Darwin Information
                            Typing Architecture (DITA)</link-external>, which has been standardized
                        by the <link-external href="https://www.oasis-open.org/">OASIS
                            consortium</link-external>, defines an XML markup architecture for
                        creating structured content.</p> </li>

                <li> <p> <link-external href="http://www.docbook.org/">DocBook</link-external>
                        defines an XML markup for books and similarly structured documents. Like
                        DITA, an OASIS technical committee maintains its standard.</p></li>

            </ul>

        </section>

        <section>
            <title>What XML document types does the SPFE Open Toolkit use?</title>
            <p> The toolkit works with two kinds of XML documents:</p>

            <ul>
                <li><p>content documents</p></li>
                <li><p>configuration documents</p></li>
            </ul>

            <p> Most of the XML documents you will work with when creating content are, of course,
                content documents. These all have a common basic structure: a root <feature>document
                    element</feature> with two children, a <xml-element-name>head</xml-element-name>
                element and a <xml-element-name>body</xml-element-name> element. The example below
                shows the structure for the <feature>generic topic</feature> XML structure.</p>

                <codeblock>
<![CDATA[
        <generic-topic>
            <head>
                <!-- Topic header goes here. It contains metadata about the document. -->
            </head>
            <body>
                <title>This is a title</title>
                <!-- The body goes here. It contains the actual content. -->
            </body>
        </generic-topic>
]]>
                </codeblock>
        </section>

    </body>
</generic-topic>
